/*
  main.enhanced.js ‚Äî —É–ª—É—á—à–µ–Ω–Ω–∞—è –∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –ª–æ–≥–∏–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ç–µ–º—ã –¥–ª—è XSoft
  –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:
  - –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Ä–µ–∂–∏–º–æ–≤: light / dark / system (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é ‚Äî system)
  - –•—Ä–∞–Ω–µ–Ω–∏–µ –≤ localStorage —Å –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
  - –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: saved > data-theme on <html> > system preference > default
  - –ü–ª–∞–≤–Ω—ã–π –ø–µ—Ä–µ—Ö–æ–¥ (–≤—Ä–µ–º–µ–Ω–Ω—ã–π –∫–ª–∞—Å—Å .theme--transition)
  - –î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å: aria-–∞—Ç—Ä–∏–±—É—Ç—ã, keyboard support
  - API: window.XSoftTheme (read-only helper) –∏ –∫–∞—Å—Ç–æ–º–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ 'xsoft:themechange'
  - –§–æ–ª–ª–±–µ–∫—ã, –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –∏ graceful degradation

  –ö–∞–∫ –ø–æ–¥–∫–ª—é—á–∞—Ç—å:
  <script defer src="/assets/js/main.enhanced.js"></script>

  CSS (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è):
  html[data-theme="light"] { --bg: #fff; --text: #111; }
  html[data-theme="dark"]  { --bg: #0b0b0b; --text: #eee; }
  body { background: var(--bg); color: var(--text); transition: background .18s ease, color .18s ease; }
*/

(function () {
  'use strict';

  // -------------------- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è --------------------
  var STORAGE_KEY = 'xsoft-theme';
  var ATTRIBUTE = 'data-theme'; // –∫—É–¥–∞ –ø–∏—à–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ —Ç–µ–º—ã ‚Äî –±–æ–ª–µ–µ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ, —á–µ–º class
  var TRANSITION_CLASS = 'theme--transition';
  var TRANSITION_MS = 180; // –≤—Ä–µ–º—è –ø–ª–∞–≤–Ω–æ–≥–æ –ø–µ—Ä–µ—Ö–æ–¥–∞
  var VALID = { LIGHT: 'light', DARK: 'dark', SYSTEM: 'system' };
  var DEFAULT = VALID.SYSTEM;

  // -------------------- –£—Ç–∏–ª–∏—Ç—ã --------------------
  function safeLocalStorageGet(key) {
    try {
      return window.localStorage ? window.localStorage.getItem(key) : null;
    } catch (err) {
      // localStorage –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (privacy mode)
      console.warn('LocalStorage get failed', err);
      return null;
    }
  }

  function safeLocalStorageSet(key, value) {
    try {
      if (window.localStorage) window.localStorage.setItem(key, value);
      return true;
    } catch (err) {
      console.warn('LocalStorage set failed', err);
      return false;
    }
  }

  function isValidTheme(v) {
    return v === VALID.LIGHT || v === VALID.DARK || v === VALID.SYSTEM;
  }

  function emitThemeChange(detail) {
    var ev;
    try {
      ev = new CustomEvent('xsoft:themechange', { detail: detail || {} });
    } catch (e) {
      // —Å—Ç–∞—Ä—ã–µ –±—Ä–∞—É–∑–µ—Ä—ã
      ev = document.createEvent('CustomEvent');
      ev.initCustomEvent('xsoft:themechange', false, false, detail || {});
    }
    document.dispatchEvent(ev);
  }

  // -------------------- –†–∞–±–æ—Ç–∞ —Å —Å–∏—Å—Ç–µ–º–æ–π (prefers-color-scheme) --------------------
  var mql = null;
  function getSystemPref() {
    try {
      if (!mql) mql = window.matchMedia('(prefers-color-scheme: dark)');
      return mql.matches ? VALID.DARK : VALID.LIGHT;
    } catch (err) {
      return VALID.LIGHT; // conservative fallback
    }
  }

  function watchSystemPreference(onChange) {
    try {
      if (!mql) mql = window.matchMedia('(prefers-color-scheme: dark)');
      if (typeof mql.addEventListener === 'function') {
        mql.addEventListener('change', onChange);
        return function () { mql.removeEventListener('change', onChange); };
      }
      // —Å—Ç–∞—Ä—ã–µ Safari
      if (typeof mql.addListener === 'function') {
        mql.addListener(onChange);
        return function () { mql.removeListener(onChange); };
      }
    } catch (err) {
      // nothing
    }
    return function () { /* noop */ };
  }

  // -------------------- –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ç–µ–º—ã –∫ DOM --------------------
  function applyThemeToDOM(theme) {
    // theme = light | dark | system
    var doc = document.documentElement;
    if (!doc) return;

    var final = theme;
    if (theme === VALID.SYSTEM) final = getSystemPref();

    // –ó–∞–ø–∏—à–µ–º –∞—Ç—Ä–∏–±—É—Ç (—É–¥–æ–±–Ω–æ –¥–ª—è CSS —Å–µ–ª–µ–∫—Ç–æ—Ä–æ–≤ –∏ —Å–Ω–∏–ø–ø–µ—Ç–æ–≤)
    doc.setAttribute(ATTRIBUTE, final);
    // –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ –º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å —Å—Ç–∞—Ä—ã–µ –∫–ª–∞—Å—Å—ã
    doc.classList.remove('light');
    doc.classList.remove('dark');
    // –ü—Ä–∏ –∂–µ–ª–∞–Ω–∏–∏ –º–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å –∫–ª–∞—Å—Å, –Ω–æ –∞—Ç—Ä–∏–±—É—Ç –±–æ–ª–µ–µ –æ—á–µ–≤–∏–¥–µ–Ω

    emitThemeChange({ themeRequested: theme, themeApplied: final });
  }

  function withTransition(fn) {
    var doc = document.documentElement;
    if (!doc) { fn(); return; }
    // —á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ –ª–∏—à–Ω–∏—Ö –ø–µ—Ä–µ—Ö–æ–¥–æ–≤ –ø—Ä–∏ –Ω–∞—á–∞–ª—å–Ω–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–µ
    doc.classList.add(TRANSITION_CLASS);
    window.setTimeout(function () {
      try { fn(); } catch (e) { console.error(e); }
      window.setTimeout(function () { doc.classList.remove(TRANSITION_CLASS); }, TRANSITION_MS);
    }, 0);
  }

  // -------------------- API —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–µ–º–æ–π --------------------
  function readStored() {
    var v = safeLocalStorageGet(STORAGE_KEY);
    if (!v) return null;
    return isValidTheme(v) ? v : null;
  }

  function setTheme(theme, options) {
    // theme: light|dark|system
    options = options || {};
    if (!isValidTheme(theme)) throw new Error('Invalid theme: ' + theme);

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–µ
    var savedOK = safeLocalStorageSet(STORAGE_KEY, theme);

    // –ü—Ä–∏–º–µ–Ω—è–µ–º
    if (options.transition) {
      withTransition(function () { applyThemeToDOM(theme); });
    } else {
      applyThemeToDOM(theme);
    }

    if (options.noEmit !== true) {
      emitThemeChange({ themeRequested: theme, saved: !!savedOK });
    }
    return true;
  }

  function getEffectiveTheme() {
    var doc = document.documentElement;
    var attr = doc.getAttribute(ATTRIBUTE);
    if (attr === VALID.LIGHT || attr === VALID.DARK) return attr;
    // fallback
    return getSystemPref();
  }

  function toggleTheme() {
    var current = readStored() || DEFAULT;
    var target;
    // –ï—Å–ª–∏ —Ç–µ–∫—É—â–∞—è —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω–∞—è ‚Äî system, —Ç–æ –æ–ø—Ä–µ–¥–µ–ª—è–µ–º, —á—Ç–æ —Å–µ–π—á–∞—Å —Ä–µ–∞–ª—å–Ω–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–æ
    var effective = getEffectiveTheme();
    target = (effective === VALID.DARK) ? VALID.LIGHT : VALID.DARK;
    setTheme(target, { transition: true });
  }

  // -------------------- UI: —Å–≤—è–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –∏ –ø–æ–≤–µ–¥–µ–Ω–∏–µ --------------------
  function findToggleButton() {
    // –æ–∂–∏–¥–∞–µ–º –∫–Ω–æ–ø–∫—É —Å id=theme-toggle, –Ω–æ –¥–æ–ø—É—Å–∫–∞–µ–º data-attr
    return document.getElementById('theme-toggle') || document.querySelector('[data-theme-toggle]');
  }

  function makeButtonAccessible(btn) {
    if (!btn) return;
    // aria-pressed –æ—Ç—Ä–∞–∂–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ dark (true –µ—Å–ª–∏ dark)
    function refreshLabel() {
      var effective = getEffectiveTheme();
      var pressed = (effective === VALID.DARK);
      try { btn.setAttribute('aria-pressed', String(pressed)); } catch (e) { /* ignore */ }

      // –ú–µ–Ω—è–µ–º –≤–∏–∑—É–∞–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç/–∏–∫–æ–Ω–∫—É
      var icon = btn.querySelector('.theme-icon');
      var label = btn.querySelector('.visually-hidden');
      if (icon) icon.textContent = pressed ? 'üåô' : '‚òÄÔ∏è';
      if (label) label.textContent = pressed ? '–í–∫–ª—é—á–µ–Ω–∞ —Ç—ë–º–Ω–∞—è —Ç–µ–º–∞' : '–í–∫–ª—é—á–µ–Ω–∞ —Å–≤–µ—Ç–ª–∞—è —Ç–µ–º–∞';
    }

    // keyboard support
    btn.addEventListener('keydown', function (ev) {
      if (ev.key === ' ' || ev.key === 'Enter') {
        ev.preventDefault();
        btn.click();
      }
    });

    // click handler
    btn.addEventListener('click', function (ev) {
      ev && ev.preventDefault && ev.preventDefault();
      try { toggleTheme(); } catch (e) { console.error('Toggle theme failed', e); }
      // –æ–±–Ω–æ–≤–∏–º –ª–µ–π–±–ª —á—É—Ç—å –ø–æ–∑–∂–µ, –∫–æ–≥–¥–∞ –∏–∑–º–µ–Ω–∏—Ç—Å—è –∞—Ç—Ä–∏–±—É—Ç –Ω–∞ html
      setTimeout(refreshLabel, TRANSITION_MS + 10);
    });

    // react to external changes
    document.addEventListener('xsoft:themechange', refreshLabel);
    // initial
    refreshLabel();
  }

  // -------------------- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞ —Å—Ç–∞—Ä—Ç–µ --------------------
  function init(options) {
    options = options || {};

    // –ë—ã—Å—Ç—Ä–∞—è –∑–∞—â–∏—Ç–∞ –æ—Ç FOUC: –µ—Å–ª–∏ –≤ <html> —É–∂–µ –µ—Å—Ç—å ATTR ‚Äî –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ –±–µ–∑ –ø–µ—Ä–µ—Ö–æ–¥–∞
    var doc = document.documentElement;
    var initialAttr = doc.getAttribute(ATTRIBUTE);
    var stored = readStored();

    // –†–µ—à–∞–µ–º –∫–∞–∫—É—é —Ç–µ–º—É –ø—Ä–∏–º–µ–Ω–∏—Ç—å –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã): stored > html attr > system > default
    var chosen = stored || (isValidTheme(initialAttr) ? initialAttr : null) || DEFAULT;

    // –ü—Ä–∏–º–µ–Ω–∏–º –±–µ–∑ –∞–Ω–∏–º–∞—Ü–∏–∏ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
    try { applyThemeToDOM(chosen); } catch (e) { console.error('Apply theme failed', e); }

    // –ü–æ–¥–ø–∏—à–µ–º—Å—è –Ω–∞ —Å–∏—Å—Ç–µ–º–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è, –µ—Å–ª–∏ –∞–∫—Ç–∏–≤–µ–Ω system
    var unwatch = function () { /* noop */ };
    if (chosen === VALID.SYSTEM || stored === VALID.SYSTEM || initialAttr === VALID.SYSTEM) {
      unwatch = watchSystemPreference(function () {
        // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —è–≤–Ω–æ –Ω–µ –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–ª –¥—Ä—É–≥—É—é —Ç–µ–º—É ‚Äî –æ–±–Ω–æ–≤–ª—è–µ–º
        var curStored = readStored();
        if (curStored === VALID.SYSTEM || !curStored) {
          // –ø–ª–∞–≤–Ω–æ –ø—Ä–∏–º–µ–Ω–∏–º –Ω–æ–≤—É—é —Ç–µ–º—É
          withTransition(function () { applyThemeToDOM(VALID.SYSTEM); });
        }
      });
    }

    // Attach UI
    var btn = findToggleButton();
    if (btn) makeButtonAccessible(btn);

    // Expose public, read-only API for other scripts
    if (!window.XSoftTheme) {
      Object.defineProperty(window, 'XSoftTheme', {
        configurable: false,
        enumerable: true,
        value: {
          get current() { return getEffectiveTheme(); },
          get stored() { return readStored(); },
          set: function (v) { return setTheme(v, { transition: true }); },
          toggle: toggleTheme
        }
      });
    }

    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º cleanup
    return function destroy() {
      try { unwatch(); } catch (e) { /* ignore */ }
    };
  }

  // -------------------- –î–æ–ø. —É–ª—É—á—à–µ–Ω–∏–µ: –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∫–∞—á–∏–≤–∞–Ω–∏–π (–±–µ–∑ —É—Ç–µ—á–µ–∫) --------------------
  function initDownloadLogging() {
    document.addEventListener('click', function (ev) {
      var el = ev.target;
      while (el && el !== document) {
        if (el.tagName === 'A' && el.hasAttribute('download')) {
          try {
            var href = el.getAttribute('href');
            // –Ω–µ –ª–æ–≥–∏—Ä—É–µ–º –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –ø—Ä–∏–≤–∞—Ç–Ω—ã–µ —Å—Å—ã–ª–∫–∏
            console.log('[XSoft] –°–∫–∞—á–∞—Ç—å:', href);
            // –ú–æ–∂–Ω–æ —Ç—É—Ç –¥–æ–±–∞–≤–∏—Ç—å –∫–∞—Å—Ç–æ–º–Ω—É—é –∞–Ω–∞–ª–∏—Ç–∏–∫—É
          } catch (e) {
            // –Ω–µ –º–µ—à–∞–µ–º –∫–ª–∏–∫—É
          }
          break;
        }
        el = el.parentNode;
      }
    }, { passive: true });
  }

  // -------------------- –ê–≤—Ç–æ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è (defer-friendly) --------------------
  // –ï—Å–ª–∏ script –ø–æ–¥–∫–ª—é—á–µ–Ω —Å defer –∏–ª–∏ –≤–Ω–∏–∑—É ‚Äî DOMContentLoaded –º–æ–∂–µ—Ç —É–∂–µ –±—ã—Ç—å.
  function onReady(fn) {
    if (document.readyState === 'loading') {
      document.addEventListener('DOMContentLoaded', fn);
    } else {
      // —É–∂–µ –≥–æ—Ç–æ–≤–æ
      setTimeout(fn, 0);
    }
  }

  onReady(function () {
    try {
      // init –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Ç–µ–º—É –∏ –ø—Ä–∏–∫—Ä–µ–ø–ª—è–µ—Ç –∫–Ω–æ–ø–∫—É
      init();
      initDownloadLogging();
    } catch (err) {
      console.error('XSoft theme init failed', err);
    }
  });

})();
